/**
 * 挿入ソートとは、あらかじめ整列が終わっている配列に、データを挿入するアルゴリズムで、最も基本的なアルゴリズの一つとして知られています。
 *
 * ■実装方法
 * 先頭から、並んだ要素のうち最初の2つを取り出し比較します。
 * 最初の要素が、二番目の要素よりも大きければ、並び替えます。
 * 次に、3つ目の要素と並べ替えた2つの要素を比べ、適切な位置に挿入します。
 * 以後、終端まで同様の処理を繰り返します。
 *
 * ■特徴
 * 挿入ソートの特徴は、人間が並べ替えを行う時に考え方に非常に近いという点です。
 * そのため、理解しやすいソートであると言えるでしょう。
 * さらに、もともとのリストがソート済み状態に近ければ比較的高速に動作しますが、逆順に並んでいるとからり時間を要します。
 * つまり、もともとの要素の並び方によって処理時間が左右されてしまうアルゴリズムなのです。
 *
 */

const array = [13, 1, 5, 2, 43, 30, 21, 55];

for (let i = 1; i < array.length; i++) {
  let tmp = array[i];

  //「整列済みの部分」のどこに挿入すれば良いか後ろから前に向かって順番に判断する
  for (let j = i - 1; j >= 0; j--) {
    //「挿入する値」が小さい場合、調べた値を１つ後ろへずらす
    if (array[j] > tmp) {
      array[j + 1] = array[j];
      array[j] = tmp;
    } else {
      //小さくなければ、ずらす処理を止める
      break;
    }
  }
  console.log(array);
}
